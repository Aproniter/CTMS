version: '3.8'

services:
  api:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    working_dir: /app
    command: go run ./cmd/api/main.go
    volumes:
      - ..:/app
    ports:
      - "8080:8080"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=casino
    depends_on:
      - postgres
      - rabbitmq

  consumer:
    build:
      context: ..
      dockerfile: docker/Dockerfile
    working_dir: /app
    command: go run ./consumer/consumer.go
    volumes:
      - ..:/app
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=casino
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_QUEUE=transactions
    depends_on:
      - postgres
      - rabbitmq

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: casino
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
      - ../db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  postgres_test:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: casino_test
    ports:
      - "5433:5432"
    volumes:
      - pgdata_test:/var/lib/postgresql/data
      - ../db/schema.sql:/docker-entrypoint-initdb.d/schema.sql:ro

  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"

volumes:
  pgdata:
  pgdata_test: